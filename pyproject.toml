[tool.poetry]
name = "fact"
version = "1.0.0"
description = "Example Python project using best practices"
authors = ["John Hagen <johnthagen@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/johnthagen/python-blueprint"
documentation = "https://johnthagen.github.io/python-blueprint/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
    # Include this classifier to prevent accidently publishing private code to PyPI.
    #   https://pypi.org/classifiers/
    "Private :: Do Not Upload",
]

[tool.poetry.dependencies]
# Some packages, such as scipy, constrain their upper bound of Python versions they support.
# Without also constraining the upper bound here, Poetry will not select those versions and will
# result in an old version being resolved/locked.
python = "^3.8, <3.11"
rich = "*"
typer = { version = "*", extras = ["all"] }

[tool.poetry.dev-dependencies]
nox-poetry = "*"

# Testing.
pytest = "*"
pytest-cov = "*"

# Type Checking.
mypy = "*"
# As of mypy 0.900, mypy no longer bundles the stubs for third-party libraries that reside
# in the typeshed project. Add these "types-" packages here if you depend on them in
# requirements.in (e.g. types-requests).
# See: http://mypy-lang.blogspot.com/2021/06/mypy-0900-released.html
#      https://github.com/python/typeshed/tree/master/stubs

# Linting.
flake8 = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
pep8-naming = "*"
# TODO: Remove this when flake8 adds native support for pyproject.toml.
pyproject-flake8 = "*"

# Formatting.
black = "*"
isort = "*"

# Documentation.
mkdocs-material = "*"
mkdocs-htmlproofer-plugin = "*"
mkdocstrings = { version = "*", extras = ["python"] }
## Autodoc.
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[tool.poetry.scripts]
fact = "fact.cli:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
strict = true
# If certain strict config options are too pedantic for a project,
# disable them selectively here by setting to false.

# Note: This configuration is suppported by pyproject-flake8.
[tool.flake8]
# Use the more relaxed max line length permitted in PEP 8.
max-line-length = 99
# This ignore is required by black.
extend-ignore = ["E203"]
# flake8-bugbear config.
# This argument is not needed if not using Typer as a dependency.
extend-immutable-calls = ["Argument"]

[tool.black]
line-length = 99
target-version = ["py38", "py39", "py310"]
# black will automatically exclude all files listed in .gitignore
# If you need to exclude additional folders, consider using extend-exclude to avoid disabling the
# default .gitignore behaviour.

[tool.isort]
profile = "black"
line_length = 99
force_sort_within_sections = true
# Inform isort of paths to import names that should be considered part of the "First Party" group.
src_paths = ["src/fact"]
skip_gitignore = true
# If you need to skip/exclude folders, consider using skip_glob as that will allow the
# isort defaults for skip to remain without the need to duplicate them.

[tool.pytest.ini_options]
filterwarnings = [
    # When running tests, treat warnings as errors (e.g. -Werror).
    # See: https://docs.pytest.org/en/latest/reference/reference.html#confval-filterwarnings
    "error",
    # Add additional warning supressions as needed here. For example, if a third-party library
    # is throwing a deprecation warning that needs to be fixed upstream:
    # "ignore::DeprecationWarning:typer",
]

[tool.coverage.run]
branch = true
