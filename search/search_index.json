{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>fact</code> User Guide","text":"<code>python-blueprint</code> Project <p>For more information on how this was built and deployed, as well as other Python best practices, see <code>python-blueprint</code>.</p> <p>Info</p> <p>This user guide is purely an illustrative example that shows off several features of Material for MkDocs and included Markdown extensions<sup>1</sup>.</p>"},{"location":"#installation","title":"Installation","text":"<p>First, install <code>uv</code>:</p> macOS and LinuxWindows <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <pre><code>powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre> <p>Then install the <code>fact</code> package and its dependencies:</p> <pre><code>uv sync\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>To run the included CLI:</p> <pre><code>uv run fact 3\n</code></pre> <p>To use <code>fact</code> as a library within your project, import the <code>factorial</code> function and execute the API like:</p> <pre><code>from fact.lib import factorial\n\nassert factorial(3) == 6  # (1)!\n</code></pre> <ol> <li>This assertion will be <code>True</code></li> </ol> <p>Tip</p> <p>Within PyCharm, use Tab to auto-complete suggested imports while typing.</p>"},{"location":"#expected-results","title":"Expected Results","text":"Input Output 1 1 2 2 3 6 4 24 <ol> <li> <p>See <code>python-blueprint</code>'s <code>mkdocs.yml</code> for how to enable these features.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/fact/","title":"fact","text":""},{"location":"reference/fact/#fact","title":"<code>fact</code>","text":""},{"location":"reference/fact/cli/","title":"cli","text":""},{"location":"reference/fact/cli/#fact.cli","title":"<code>fact.cli</code>","text":""},{"location":"reference/fact/cli/#fact.cli.app","title":"<code>app = Typer(add_completion=False)</code>  <code>module-attribute</code>","text":""},{"location":"reference/fact/cli/#fact.cli.main","title":"<code>main(n: Annotated[int, Argument(min=0, help='The input n of fact(n)')]) -&gt; None</code>","text":"<p>Compute factorial of a given input.</p> Source code in <code>src/fact/cli.py</code> <pre><code>@app.command()\ndef main(n: Annotated[int, Argument(min=0, help=\"The input n of fact(n)\")]) -&gt; None:\n    \"\"\"Compute factorial of a given input.\"\"\"\n\n    Console().print(f\"fact({n}) = {factorial(n)}\")\n</code></pre>"},{"location":"reference/fact/lib/","title":"lib","text":""},{"location":"reference/fact/lib/#fact.lib","title":"<code>fact.lib</code>","text":""},{"location":"reference/fact/lib/#fact.lib.InvalidFactorialError","title":"<code>InvalidFactorialError</code>","text":"<p>               Bases: <code>RuntimeError</code></p> <p>Error generated if an invalid factorial input is given.</p> Source code in <code>src/fact/lib.py</code> <pre><code>class InvalidFactorialError(RuntimeError):\n    \"\"\"Error generated if an invalid factorial input is given.\"\"\"\n</code></pre>"},{"location":"reference/fact/lib/#fact.lib.factorial","title":"<code>factorial(n: int) -&gt; int</code>","text":"<p>Computes the factorial through a recursive algorithm.</p> <p>Parameters:</p> Name Type Description Default <code>n</code> <code>int</code> <p>A positive input value.</p> required <p>Raises:</p> Type Description <code>InvalidFactorialError</code> <p>If n is less than 0.</p> <p>Returns:</p> Type Description <code>int</code> <p>Computed factorial.</p> Source code in <code>src/fact/lib.py</code> <pre><code>def factorial(n: int) -&gt; int:\n    \"\"\"Computes the factorial through a recursive algorithm.\n\n    Args:\n        n: A positive input value.\n\n    Raises:\n        InvalidFactorialError: If n is less than 0.\n\n    Returns:\n        Computed factorial.\n    \"\"\"\n    if n &lt; 0:\n        raise InvalidFactorialError(f\"n is less than zero: {n}\")\n    elif n == 0:\n        return 1\n\n    return n * factorial(n - 1)\n</code></pre>"}]}